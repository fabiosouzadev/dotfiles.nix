#########################################################
#█▀▀ ▄▀█ █▄▄ █ █▀█ █▀ █▀█ █░█ ▀█ ▄▀█ █▀▄ █▀▀ █░█        #
#█▀░ █▀█ █▄█ █ █▄█ ▄█ █▄█ █▄█ █▄ █▀█ █▄▀ ██▄ ▀▄▀        #
#########################################################
#######################
#   General Setting   #
#######################

# set the mod key to the winkey:
set $mod Mod4

set $up k
set $right l
set $down j
set $left h

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango: JetBrainsMono Nerd Font Mono 12
#font pango:Iosevka Nerd Font 10

#####################
# workspace layout: #
#####################

# default i3 tiling mode:
workspace_layout default

# i3 stacking layout:
# Each window will be fullscreen and tabbed top to bottom.
#workspace_layout stacking

# i3 tabbed layout:
# Each new window will open fullscreen as a tab (left to right)
#workspace_layout tabbed
##############################
# extra options for windows: #
##############################

for_window [class="^.*"] border pixel 0

# thin borders
# hide_edge_borders both

# Set inner/outer gaps
gaps inner 6
gaps outer 6

# show window title bars (not officially supported with i3gaps)
#default_border normal

# window title alignment
#title_align center

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# switch/iterate between workspaces
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# switch to workspace
bindsym $mod+1    workspace  $ws1
bindsym $mod+2    workspace  $ws2
bindsym $mod+3    workspace  $ws3
bindsym $mod+4    workspace  $ws4
bindsym $mod+5    workspace  $ws5
bindsym $mod+6    workspace  $ws6
bindsym $mod+7    workspace  $ws7
bindsym $mod+8    workspace  $ws8
bindsym $mod+9    workspace  $ws9
bindsym $mod+0    workspace  $ws10

# switch to workspace with numpad keys
bindcode $mod+87 workspace 1
bindcode $mod+88 workspace 2
bindcode $mod+89 workspace 3
bindcode $mod+83 workspace 4
bindcode $mod+84 workspace 5
bindcode $mod+85 workspace 6
bindcode $mod+79 workspace 7
bindcode $mod+80 workspace 8
bindcode $mod+81 workspace 9
bindcode $mod+90 workspace 10

# switch to workspace with numlock numpad keys
bindcode $mod+Mod2+87 workspace $ws1
bindcode $mod+Mod2+88 workspace $ws2
bindcode $mod+Mod2+89 workspace $ws3
bindcode $mod+Mod2+83 workspace $ws4
bindcode $mod+Mod2+84 workspace $ws5
bindcode $mod+Mod2+85 workspace $ws6
bindcode $mod+Mod2+79 workspace $ws7
bindcode $mod+Mod2+80 workspace $ws8
bindcode $mod+Mod2+81 workspace $ws9
bindcode $mod+Mod2+90 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1    move container to workspace  $ws1
bindsym $mod+Shift+2    move container to workspace  $ws2
bindsym $mod+Shift+3    move container to workspace  $ws3
bindsym $mod+Shift+4    move container to workspace  $ws4
bindsym $mod+Shift+5    move container to workspace  $ws5
bindsym $mod+Shift+6    move container to workspace  $ws6
bindsym $mod+Shift+7    move container to workspace  $ws7
bindsym $mod+Shift+8    move container to workspace  $ws8
bindsym $mod+Shift+9    move container to workspace  $ws9
bindsym $mod+Shift+0    move container to workspace  $ws10

# move focused container to workspace with numpad keys
bindcode $mod+Shift+Mod2+87 	move container to workspace  $ws1
bindcode $mod+Shift+Mod2+88 	move container to workspace  $ws2
bindcode $mod+Shift+Mod2+89 	move container to workspace  $ws3
bindcode $mod+Shift+Mod2+83 	move container to workspace  $ws4
bindcode $mod+Shift+Mod2+84 	move container to workspace  $ws5
bindcode $mod+Shift+Mod2+85 	move container to workspace  $ws6
bindcode $mod+Shift+Mod2+79 	move container to workspace  $ws7
bindcode $mod+Shift+Mod2+80 	move container to workspace  $ws8
bindcode $mod+Shift+Mod2+81 	move container to workspace  $ws9
bindcode $mod+Shift+Mod2+90 	move container to workspace  $ws10

# move focused container to workspace with numpad keys
bindcode $mod+Shift+87 	 move container to workspace  $ws1
bindcode $mod+Shift+88 	 move container to workspace  $ws2
bindcode $mod+Shift+89 	 move container to workspace  $ws3
bindcode $mod+Shift+83 	 move container to workspace  $ws4
bindcode $mod+Shift+84 	 move container to workspace  $ws5
bindcode $mod+Shift+85 	 move container to workspace  $ws6
bindcode $mod+Shift+79 	 move container to workspace  $ws7
bindcode $mod+Shift+80 	 move container to workspace  $ws8
bindcode $mod+Shift+81 	 move container to workspace  $ws9
bindcode $mod+Shift+90 	 move container to workspace  $ws10

mode "resize" {
	# These bindings trigger as soon as you enter the resize mode
	# Pressing left will shrink the window’s width.
	# Pressing right will grow the window’s width.
	# Pressing up will shrink the window’s height.
	# Pressing down will grow the window’s height.
	bindsym $left resize shrink width 10 px or 10 ppt
	bindsym $down resize grow height 10 px or 10 ppt
	bindsym $up resize shrink height 10 px or 10 ppt
	bindsym $right resize grow width 10 px or 10 ppt

	bindsym Shift+$left resize shrink width 50 px or 10 ppt
	bindsym Shift+$down resize grow height 50 px or 10 ppt
	bindsym Shift+$up resize shrink height 50 px or 10 ppt
	bindsym Shift+$right resize grow width 50 px or 10 ppt

	# same bindings, but for the arrow keys
	bindsym Left resize shrink width 10 px or 10 ppt
	bindsym Down resize grow height 10 px or 10 ppt
	bindsym Up resize shrink height 10 px or 10 ppt
	bindsym Right resize grow width 10 px or 10 ppt

	# back to normal: Enter or Escape or $mod+r
	bindsym Return mode "default"
	bindsym Escape mode "default"
	bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

######################################
# keybindings for different actions: #
######################################

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+x split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# open new empty workspace
bindsym $mod+Shift+n exec ~/.config/i3/scripts/empty_workspace

# Backlight control
bindsym XF86MonBrightnessUp exec xbacklight +5 && notify-send "Brightness - $(xbacklight -get | cut -d '.' -f 1)%"

bindsym XF86MonBrightnessDown exec xbacklight -5 && notify-send "Brightness - $(xbacklight -get | cut -d '.' -f 1)%"

# start a terminal
bindsym $mod+Return exec alacritty

# kill focused window
bindsym $mod+q kill

# exit-menu
bindsym $mod+Shift+e exit

# bindsym $mod+Shift+x exec ~/.config/i3/scripts/powermenu
# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to update i3)
bindsym $mod+Shift+r restart

# keybinding list in editor:
# bindsym $mod+F1 exec xed ~/.config/i3/keybindings



### Multimedia Keys ####

# volume
bindsym XF86AudioRaiseVolume exec amixer sset Master 5%+
bindsym XF86AudioLowerVolume exec amixer sset Master 5%-

# gradular volume control
bindsym $mod+XF86AudioRaiseVolume exec amixer sset Master 1%+
bindsym $mod+XF86AudioLowerVolume exec amixer sset Master 1%-

# mute
bindsym XF86AudioMute exec amixer sset Master toggle

##### Pulse Audio controls ######
# bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume
# bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
# bindsym XF86AudioMute        exec --no-startup-id pactl set-sink-mute 0 toggle # mute

# gradular volume control
#bindsym $mod+XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +1% #increase sound volume
#bindsym $mod+XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -1% #decrease sound volume


# audio control
bindsym XF86AudioPlay  exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext  exec playerctl next
bindsym XF86AudioPrev  exec playerctl previous

# Redirect sound to headphones
#bindsym $mod+p exec /usr/local/bin/switch-audio-port

## App shortcuts
bindsym $mod+b exec brave
bindsym $mod+n exec thunar
#bindsym Print exec scrot ~/%Y-%m-%d-%T-screenshot.png && notify-send "Screenshot saved to ~/$(date +"%Y-%m-%d-%T")-screenshot.png"
bindsym $mod+p exec --no-startup-id flameshot gui

# Adjust displays
bindsym $mod+m exec --no-startup-id ~/.screenlayout/i3_detect_displays.sh


##########################################
# configuration for workspace behaviour: #
##########################################

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:"
set $ws2 "2:"
set $ws3 "3:󰇧"
set $ws4 "4:"
set $ws5 "5:"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"


# use workspaces on different displays:
# where you have to replace VGA-0/HDMI-0 with the names for your displays
# you can get from xrandr command
#workspace $ws1 output eDP-1
#workspace $ws2 output VGA-0
#workspace $ws3 output HDMI-0
#workspace $ws4 output HDMI-0
#workspace $ws5 output HDMI-0

# bind program to workspace and focus to them on startup:
assign [class="Spotify"] $ws1
assign [class="Slack"] $ws2
assign [class="obsidian"] $ws3
assign [class="Todoist"] $ws3
assign [class="Brave-browser-*"] $ws4
assign [class="org.wezfurlong.wezterm"] $ws5
assign [class="Kitty"] $ws5
assign [class="Thunar"] $ws6

# automatic set focus new window if it opens on another workspace than the current:
for_window [class=Spotify] focus
for_window [class=Slack] focus
for_window [class=Brave-browser-*] focus
for_window [class=Xfce4-terminal] focus
for_window [class="org.wezfurlong.wezterm"] focus
for_window [class=Thunar] focus
for_window [class=obsidian] focus
for_window [class=Todoist] focus
##################
# floating rules #
##################

# set floating (nontiling) for apps needing it
#for_window [class="Yad" instance="yad"] floating enable
#for_window [class="Galculator" instance="galculator"] floating enable
#for_window [class="Blueberry.py" instance="blueberry.py"] floating enable

# set floating (nontiling) for special apps
#for_window [class="Xsane" instance="xsane"] floating enable
#for_window [class="Pavucontrol" instance="pavucontrol"] floating enable
#for_window [class="qt5ct" instance="qt5ct"] floating enable
#for_window [class="Blueberry.py" instance="blueberry.py"] floating enable
#for_window [class="Bluetooth-sendto" instance="bluetooth-sendto"] floating enable
#for_window [class="Pamac-manager"] floating enable
#for_window [window_role="About"] floating enable

# set border of floating window
#for_window [class="urxvt"] border pixel 1

# set size of floating window
#for_window [window_role="(?i)GtkFileChooserDialog"] resize set 640 480 #to set size of file choose dialog
#for_window [class=".*"] resize set 640 480 #to change size of all floating windows

# set position of floating window
#for_window [class=".*"] move position center
######################################
# color settings for bar and windows #
######################################

# Set colours various window states
# Syntax: client.<class> <border> <background> <text> [<indicator> [<child_border>]]
# The available classes are:
# client.focused: The window that has focus.
# client.focused_inactive: The most recently focused view within a container which is not focused.
# client.placeholder: Ignored (present for i3 compatibility).
# client.unfocused: A view that does not have focus.
# client.urgent: A view with an urgency hint. Note: Native Wayland windows do not support urgency. Urgency only works for Xwayland windows.

#The meaning of each color is:
# border: The border around the title bar.
# background: The background of the title bar.
# text: The text color of the title bar.
# indicator: The color used to indicate where a new view will open. In a tiled container, this would paint the right border of the current view if a new view would be opened to the right.
# child_border: The border around the view itself.

# The default colors are:
# class	        border	background	text    indicator	child_border
# background	n/a	    #ffffff     n/a	    n/a	        n/a
# focused	    #4c7899	#285577	    #ffffff	#2e9ef4	    #285577
# focused_inactive	#333333	#5f676a	#ffffff	#484e50	    #5f676a
# unfocused	    #333333	#222222	    #888888	#292d2e	    #222222
# urgent	    #2f343a	#900000	    #ffffff	#900000	    #900000
# placeholder	#000000	#0c0c0c	    #ffffff	#000000 	#0c0c0c

client.focused           #9aa5ce #364A82 #c0caf5 #9aa5ce   #9aa5ce
client.focused_inactive  #16161d #16161d #c0caf5 #16161d   #16161d
client.unfocused         #16161d #16161d #c0caf5 #16161d   #16161d

#############################################
# autostart applications/services on login: #
#############################################

#get auth work with polkit-gnome
#exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# dex execute .desktop files + apps using /etc/xdg/autostart.
# when second to i3 a DE is installed or mixed usage of i3 + xfce4 or GNOME
# in this cases better disable dex and use manual starting apps using xdg/autostart
# if enabled you should comment welcome app.
# https://github.com/jceb/dex
#exec --no-startup-id dex -a -s /etc/xdg/autostart/:~/.config/autostart/
exec --no-startup-id dex --autostart --environment i3

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec_always --no-startup-id nm-applet

# start a script to setup displays
# uncomment the next line, use arandr to setup displays and save the file as monitor and set wallpaper:
exec_always --no-startup-id ~/.screenlayout/i3_detect_displays.sh; feh --bg-fill --randomize ~/.config/wallpapers
exec_always --no-startup-id sleep 1; ~/.config/polybar/launch.sh --two

# Autostart apps as you like
exec --no-startup-id slack
exec --no-startup-id obsidian
exec --no-startup-id todoist-electron
exec --no-startup-id wezterm
#exec --no-startup-id sleep 3 && thunar

exec --no-startup-id "setxkbmap -layout 'us,br' -variant 'alt-intl,abnt2' -option 'grp:alt_caps_toggle'"

######################
# compositor - picom #
######################
# picom: https://wiki.archlinux.org/title/Picom
# manpage: https://man.archlinux.org/man/picom.1.en
# The default configuration is available in /etc/xdg/picom.conf
# For modifications, it can be copied to ~/.config/picom/picom.conf or ~/.config/picom.conf
# install picom package (yay -S picom)
# start using default config
#
# for custom config:
#exec_always --no-startup-id picom --config ~/.config/picom.conf
#

## Dunst
exec_always --no-startup-id dunst --config ~/.config/dunst/dunstrc


#####################################
# Application menu handled by rofi: #
#####################################
# start dmenu (a program launcher)
#bindsym $mod+d exec --no-startup-id dmenu_run

## rofi bindings fancy application menu ($mod+d /F9 optional disabled)
bindsym $mod+d exec --no-startup-id ~/.config/rofi/launchers/type-2/launcher.sh
bindsym $mod+Shift+x exec --no-startup-id ~/.config/rofi/powermenu/type-2/powermenu.sh
# bindsym F9 exec rofi -modi drun -show drun \
#         -config ~/.config/rofi/rofidmenu.rasi

## rofi bindings for window menu ($mod+w /F10 optional disabled)
bindsym $mod+w exec --no-startup-id ~/.config/rofi/launchers/type-1/window.sh

## rofi bindings for screenshot
bindsym $mod+Shift+p exec --no-startup-id ~/.config/rofi/applets/bin/screenshot.sh

## rofi bindings to manage clipboard (install rofi-greenclip from the AUR)
exec --no-startup-id greenclip daemon>/dev/null
bindsym $mod+c exec --no-startup-id ~/.config/rofi/greenclip/type-5/greenclip.sh

# keybinding in fancy rofi (automated):
#bindsym F1 exec ~/.config/i3/scripts/keyhint-2


# vim: ft=cfg
